server:
  port: 8000
spring:
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
  profiles:
    active: dev
  application:
    name: freedom-code
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # MYSQL 5 驱动：com.mysql.jdbc.Driver，MYSQL 6+ 驱动：com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/fr_user?autoReconnect=true&useUnicode=true&characterEncoding=utf-8
    username: root
    password: 258369
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 100
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: select VERSION()
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  # consul
  cloud:
    consul:
      enabled: true
      host: 192.168.66.131
      port: 8501
      discovery:
        hostname: ${spring.cloud.client.ip-address}
        instance-id: ${spring.application.name}:${spring.cloud.consul.discovery.hostname}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 10s
        health-check-critical-timeout: 30s # 健康检查失败30s，自动下线失效服务
        register: true
        register-health-check: true
        service-name: ${spring.application.name}
#        tags:
#          - env=${spring.profiles.active} # 可以用这个来区分环境
#    alibaba:
#      seata:
#        tx-service-group: my_test_tx_group

  liquibase:
    change-log: 'classpath:/db/changelog/db.changelog-master.xml'
    database-change-log-lock-table: databasechangeloglock
    database-change-log-table: databasechangelog
    drop-first: false
    enabled: false
    test-rollback-on-update: false

  redis:
    database: 3
    host: localhost
    lettuce:
      pool:
        max-active: 16
        max-idle: 8
        max-wait: 4000
        min-idle: 6
    port: 6379
    timeout: 4000
# springboot升级到2.6.6报错 org.springframework.context.ApplicationContextException: Failed to start bean 'documentationPluginsBootstrapper'; nested exception is java.lang.NullPointerException
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher

# 放开端口
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# mybatisplus的配置
mybatis-plus:
  configuration:
    # 是否开启自动驼峰命名规则
    map-underscore-to-camel-case: true
    # 对所有的 resultMap 都进行自动映射
    auto-mapping-behavior: full
    # #控制台打印完整带参数SQL语句
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:mapper/**/*.xml

# ===== 自定义swagger配置 ===== #
swagger:
  enable: false
  application-name: ${spring.application.name}
  application-version: 1.0
  application-description: springfox swagger 3.0 demo
  try-host: http://localhost:${server.port}

test:
  conditional:
    enabled: false
  apollo:
    test: false

# apollo配置
apollo:
  bootstrap:
    enabled: true
    namespaces: application-dev.yml
    eagerLoad:
      enabled: true
  cache-dir: E:\12_learning\apollo\apollo-cache
  meta: http://localhost:8080
app:
  id: freedom-code
env: dev

seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: my_test_tx_group
  enable-auto-data-source-proxy: ${seata.enabled}
  data-source-proxy-mode: AT
  use-jdk-proxy: false
  client:
    rm:
      async-commit-buffer-limit: 10000
      report-retry-count: 5
      table-meta-check-enable: false
      report-success-enable: false
      saga-branch-register-enable: false
      saga-json-parser: fastjson
      lock:
        retry-interval: 10
        retry-times: 30
        retry-policy-branch-rollback-on-conflict: true
    tm:
      commit-retry-count: 5
      rollback-retry-count: 5
      default-global-transaction-timeout: 60000
      degrade-check: false
      degrade-check-period: 2000
      degrade-check-allow-times: 10
    undo:
      data-validation: true
      log-serialization: jackson
      log-table: undo_log
      only-care-update-columns: true
  service:
    vgroup-mapping:
      my_test_tx_group: seata-server
    enable-degrade: false
    disable-global-transaction: false
  transport:
    shutdown:
      wait: 3
    thread-factory:
      boss-thread-prefix: NettyBoss
      worker-thread-prefix: NettyServerNIOWorker
      server-executor-thread-prefix: NettyServerBizHandler
      share-boss-worker: false
      client-selector-thread-prefix: NettyClientSelector
      client-selector-thread-size: 1
      client-worker-thread-prefix: NettyClientWorkerThread
      worker-thread-size: default
      boss-thread-size: 1
    type: TCP
    server: NIO
    heartbeat: true
    serialization: seata
    compressor: none
    enable-client-batch-send-request: true
#  config:
#    type: apollo
#    apollo:
#      apollo-meta: http://192.168.66.131:8080
#      app-id: seata-server
#      namespace: application
#      apollo-accesskey-secret: ""
  registry:
    type: consul
    load-balance: RandomLoadBalance
    load-balance-virtual-nodes: 10
    consul:
      server-addr: 192.168.66.131:8500
      cluster: seata-server
  log:
    exception-rate: 100
